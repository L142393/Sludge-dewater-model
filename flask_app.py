{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ee0c147b-cfff-4fee-a22b-5f154d9ccda9",
   "metadata": {},
   "outputs": [],
   "source": [
    "from flask import Flask, request, render_template_string\n",
    "import os\n",
    "import pickle\n",
    "import xgboost as xgb\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import threading\n",
    "\n",
    "# Load model\n",
    "xgb_model = xgb.Booster()\n",
    "xgb_model.load_model('xgb_model.json')\n",
    "\n",
    "# Load target encoders\n",
    "with open('target_encoding1.pkl', 'rb') as f:\n",
    "    target_encoding1 = pickle.load(f)\n",
    "\n",
    "with open('target_encoding2.pkl', 'rb') as f:\n",
    "    target_encoding2 = pickle.load(f)\n",
    "\n",
    "# Load feature names\n",
    "with open('feature_names.pkl', 'rb') as f:\n",
    "    feature_names = pickle.load(f)\n",
    "\n",
    "app = Flask(__name__)\n",
    "\n",
    "# Bilingual text dictionary\n",
    "language_texts = {\n",
    "    'en': {\n",
    "        'title': 'Predict Tool for Sludge Dewatering',\n",
    "        'heading': 'Enter Data to Make Predictions',\n",
    "        'catalyst_label': 'Catalyst',\n",
    "        'radical_label': 'Radical Donor',\n",
    "        'radical_concentration_label': 'Radical Donor C (mmol/L)',\n",
    "        'catalyst_concentration_label': 'Catalyst C (mmol/L)',\n",
    "        'ph_label': 'pH',\n",
    "        'vs_ts_label': 'VS/TS',\n",
    "        'sludge_water_content_label': 'Initial MC',\n",
    "        'rpm_label': 'Mixing Speed (rpm)',\n",
    "        'time_label': 'Mixing Time (min)',\n",
    "        'predict_button': 'Predict',\n",
    "        'result_heading': 'The Predicted Outcome Value',\n",
    "        'back_button': 'Back to Home'\n",
    "    },\n",
    "    'zh': {\n",
    "        'title': '污泥脱水预测工具',\n",
    "        'heading': '输入数据以进行预测',\n",
    "        'catalyst_label': '催化剂种类',\n",
    "        'radical_label': '自由基种类',\n",
    "        'radical_concentration_label': '自由基浓度 (mmol/L)',\n",
    "        'catalyst_concentration_label': '催化剂浓度 (mmol/L)',\n",
    "        'ph_label': 'pH',\n",
    "        'vs_ts_label': 'VS/TS',\n",
    "        'sludge_water_content_label': '原污泥含水率',\n",
    "        'rpm_label': '转速 (rpm)',\n",
    "        'time_label': '时间 (min)',\n",
    "        'predict_button': '预测',\n",
    "        'result_heading': '预测结果',\n",
    "        'back_button': '返回主页'\n",
    "    }\n",
    "}\n",
    "\n",
    "def preprocess_input(data):\n",
    "    catalyst_encoded = target_encoding1.get(data['催化剂种类'], 0)\n",
    "    radical_encoded = target_encoding2.get(data['自由基种类'], 0)\n",
    "\n",
    "    numerical_features = [\n",
    "        float(data.get('自由基浓度mmol/L', 0)),\n",
    "        float(data.get('催化剂浓度mmol/L', 0)),\n",
    "        float(data.get('pH', 7.0)),\n",
    "        float(data.get('VS/TS', 0)),\n",
    "        float(data.get('原污泥含水率', 0)),\n",
    "        float(data.get('转速rpm', 0)),\n",
    "        float(data.get('时间/min', 0))\n",
    "    ]\n",
    "\n",
    "    processed_features = [catalyst_encoded, radical_encoded] + numerical_features\n",
    "    return pd.DataFrame([processed_features], columns=feature_names)\n",
    "\n",
    "# Mapping rules\n",
    "radical_merge_map = {'SPS过硫酸盐': 'SPS'}\n",
    "catalyst_merge_map = {'Fe Ⅱ': 'FeⅡ'}\n",
    "\n",
    "# Original dropdown options\n",
    "catalyst_types_raw = ['FeⅡ', 'ZVI', 'PMS', 'Fe3O4', 'Al', 'FeⅢ', 'Fe Ⅱ']\n",
    "radical_types_raw = ['SPS', 'H2O2', 'KMnO4', 'SPC', 'O3', 'PMS', 'Fe Ⅵ', 'KHSO5', 'sodium sulphite', 'SPS过硫酸盐']\n",
    "\n",
    "# Apply mapping and deduplicate\n",
    "catalyst_types = list(set(catalyst_merge_map.get(c, c) for c in catalyst_types_raw))\n",
    "radical_types = list(set(radical_merge_map.get(r, r) for r in radical_types_raw))\n",
    "\n",
    "@app.route('/')\n",
    "def home():\n",
    "    lang = request.args.get('lang', 'zh')\n",
    "    texts = language_texts.get(lang, language_texts['zh'])\n",
    "\n",
    "    catalyst_options = ''.join([f'<option value=\"{c}\">{c}</option>' for c in catalyst_types])\n",
    "    radical_options = ''.join([f'<option value=\"{r}\">{r}</option>' for r in radical_types])\n",
    "\n",
    "    return render_template_string(f'''\n",
    "    <!DOCTYPE html>\n",
    "    <html>\n",
    "    <head><title>{texts['title']}</title></head>\n",
    "    <body>\n",
    "        <h1>{texts['heading']}</h1>\n",
    "        <form action=\"/predict?lang={lang}\" method=\"post\">\n",
    "            <label>{texts['catalyst_label']}:</label>\n",
    "            <select name=\"catalyst\">{catalyst_options}</select><br>\n",
    "            <label>{texts['radical_label']}:</label>\n",
    "            <select name=\"radical\">{radical_options}</select><br>\n",
    "            <label>{texts['radical_concentration_label']}:</label>\n",
    "            <input name=\"radical_concentration\" type=\"number\" step=\"0.01\"><br>\n",
    "            <label>{texts['catalyst_concentration_label']}:</label>\n",
    "            <input name=\"catalyst_concentration\" type=\"number\" step=\"0.01\"><br>\n",
    "            <label>{texts['ph_label']}:</label>\n",
    "            <input name=\"pH\" type=\"number\" step=\"0.01\" min=\"0\" max=\"14\"><br>\n",
    "            <label>{texts['vs_ts_label']}:</label>\n",
    "            <input name=\"vs_ts\" type=\"number\" step=\"0.01\"><br>\n",
    "            <label>{texts['sludge_water_content_label']}:</label>\n",
    "            <input name=\"sludge_water_content\" type=\"number\" step=\"0.01\" min=\"1\" max=\"100\"><br>\n",
    "            <label>{texts['rpm_label']}:</label>\n",
    "            <input name=\"rpm\" type=\"number\" step=\"1\"><br>\n",
    "            <label>{texts['time_label']}:</label>\n",
    "            <input name=\"time\" type=\"number\" step=\"1\"><br>\n",
    "            <button type=\"submit\">{texts['predict_button']}</button>\n",
    "        </form>\n",
    "        <p><a href=\"/?lang=zh\">中文</a> | <a href=\"/?lang=en\">English</a></p>\n",
    "    </body>\n",
    "    </html>\n",
    "    ''')\n",
    "\n",
    "@app.route('/predict', methods=['POST'])\n",
    "def predict():\n",
    "    try:\n",
    "        lang = request.args.get('lang', 'zh')\n",
    "        texts = language_texts.get(lang, language_texts['zh'])\n",
    "\n",
    "        data = {\n",
    "            \"催化剂种类\": catalyst_merge_map.get(request.form['catalyst'], request.form['catalyst']),\n",
    "            \"自由基种类\": radical_merge_map.get(request.form['radical'], request.form['radical']),\n",
    "            \"自由基浓度mmol/L\": float(request.form['radical_concentration']),\n",
    "            \"催化剂浓度mmol/L\": float(request.form['catalyst_concentration']),\n",
    "            \"pH\": float(request.form['pH']),\n",
    "            \"VS/TS\": float(request.form['vs_ts']),\n",
    "            \"原污泥含水率\": float(request.form['sludge_water_content']),\n",
    "            \"转速rpm\": float(request.form['rpm']),\n",
    "            \"时间/min\": float(request.form['time']),\n",
    "        }\n",
    "\n",
    "        features = preprocess_input(data)\n",
    "        dmatrix = xgb.DMatrix(features)\n",
    "        prediction = xgb_model.predict(dmatrix)\n",
    "\n",
    "        return render_template_string(f'''\n",
    "        <!DOCTYPE html>\n",
    "        <html>\n",
    "        <head><title>{texts['result_heading']}</title></head>\n",
    "        <body>\n",
    "            <h1>{texts['result_heading']}</h1>\n",
    "            <p>{texts['result_heading']}: <strong>{{{{ prediction }}}}</strong></p>\n",
    "            <a href=\"/?lang={lang}\">{texts['back_button']}</a>\n",
    "        </body>\n",
    "        </html>\n",
    "        ''', prediction=prediction[0])\n",
    "    except Exception as e:\n",
    "        return f\"Error occurred: {str(e)}\"\n",
    "\n",
    "# Launch Flask in background thread\n",
    "def run_flask():\n",
    "    app.run(debug=True, use_reloader=False, port=5000)\n",
    "\n",
    "flask_thread = threading.Thread(target=run_flask)\n",
    "flask_thread.daemon = True\n",
    "flask_thread.start()\n",
    "\n",
    "print(\"Flask app is running at http://127.0.0.1:5000\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a501fd54-e321-4c2c-bf7b-e30f6ef24cf7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "test3",
   "language": "python",
   "name": "test3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.20"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
